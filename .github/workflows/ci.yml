name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Unit Tests
  unit_test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # Step 4: Prepare test environment
    - name: Prepare test environment
      run: |
        mkdir -p /tmp/testdir
        echo "test content" > /tmp/testdir/testfile.txt
        mkdir -p /tmp/quickbackup
        echo "backup_paths: ['/tmp/testdir']" > /tmp/quickbackup/config.yml
        echo "s3_bucket: 'hybytes-rpm-repo'" >> /tmp/quickbackup/config.yml
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml

    # Step 5: Run Unit Tests
    - name: Run unit tests
      run: pytest tests/test_unit.py --tb=short
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml
        PYTHONPATH: ./src


  # Job 2: Integration Tests
  integration_test:
    runs-on: ubuntu-latest
    needs: unit_test  # This job will only run after the unit_test job has completed successfully.

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # Step 4: Prepare test environment
    - name: Prepare test environment
      run: |
        mkdir -p /tmp/testdir
        echo "test content" > /tmp/testdir/testfile.txt
        mkdir -p /tmp/quickbackup
        echo "backup_paths: ['/tmp/testdir']" > /tmp/quickbackup/config.yml
        echo "s3_bucket: 'hybytes-rpm-repo'" >> /tmp/quickbackup/config.yml
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml

    # Step 5: Run Integration Tests
    - name: Run integration tests
      run: pytest tests/test_integration.py --tb=short
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml
        PYTHONPATH: ./src


  # Job 3: Performance Tests
  performance_test:
    runs-on: ubuntu-latest
    needs: integration_test  # This job will only run after the integration_test job has completed successfully.

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # Step 4: Prepare test environment
    - name: Prepare test environment
      run: |
        mkdir -p /tmp/testdir
        echo "test content" > /tmp/testdir/testfile.txt
        mkdir -p /tmp/quickbackup
        echo "backup_paths: ['/tmp/testdir']" > /tmp/quickbackup/config.yml
        echo "s3_bucket: 'hybytes-rpm-repo'" >> /tmp/quickbackup/config.yml
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml

    # Step 5: Run Performance Tests
    - name: Run performance tests
      run: pytest tests/test_performance.py --tb=short
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml
        PYTHONPATH: ./src


  # Job 4: Security Validation Tests
  security_validation:
    runs-on: ubuntu-latest
    needs: performance_test  # This job will only run after the performance_test job has completed successfully.

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # Step 4: Install security validation tools
    - name: Install security validation tools
      run: |
        pip install bandit
        pip install pip-audit
        pip install safety
        sudo apt-get update && sudo apt-get install -y lynis

    # Step 5: Run Bandit Security Validation
    - name: Run Bandit security validation
      run: bandit -r src/backup.py -v
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml
        PYTHONPATH: ./src

    # Step 6: Run Lynis Security Validation
    - name: Run Lynis security validation
      run: lynis audit system --report-file=lynis_report.html
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml
        PYTHONPATH: ./src

    # Step 7: Run pip-audit
    - name: Run pip-audit
      run: pip-audit --output=pip_audit_report.json
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml
        PYTHONPATH: ./src

    # Step 8: Run Safety check
    - name: Run Safety check
      run: safety check --output safety_report.json
      env:
        CONFIG_PATH: /tmp/quickbackup/config.yml
        PYTHONPATH: ./src
